@using X.PagedList
@using X.PagedList.Mvc.Core

@model IPagedList<ProyectoEjemploModel.Models.Departamento>

@{
    ViewData["Title"] = "Index";
}

<h1>Listado de departamentos</h1>

<p>
    <a class="brn btn-outline-primary" asp-action="Create">Crrear nuevo departamento</a>
</p>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Nombre)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
               @Html.ActionLink("Editar", "Edit", new { id = item.Id }, new { @class = "btn btn-info" }) |
                @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-secondary" }) |
                @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
        
            </td>
        </tr>
}
    </tbody>
</table>
<div class="text-center"> 
    @Html.PagedListPager(Model, page => Url.Action("Index", new{page}), new PagedListRenderOptions{
        LiElementClasses = new String[] {"page-item"},
        PageClasses=new String[] {"page-link"}
    })
</div>